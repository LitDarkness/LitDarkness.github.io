{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-]"},"docs":[{"location":"","text":"LitDarkness \u7684\u535a\u5ba2 \u00b6 \u5e76\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684","title":"LitDarkness \u7684\u535a\u5ba2"},{"location":"#litdarkness","text":"\u5e76\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684","title":"LitDarkness \u7684\u535a\u5ba2"},{"location":"blog/","text":"","title":"Index"},{"location":"blog/posts/20221230/","text":"\u6c42\u8bc1\uff1a\u5bf9\u4e8e\u4e0d\u5b9a\u65b9\u7a0b \\(x^n + y ^ n \\equiv z ^ n \\pmod p\\) , \\(\\forall n \\in \\mathbb{N^+}, \\exists p_0\\) , \u5f53 \\(p \\in \\{p \u4e3a\u7d20\u6570|p > p_0\\}\\) \u65f6, \u65b9\u7a0b\u5b58\u5728\u975e\u96f6\u89e3\u3002 \u8bc1\u660e\uff1a\u8003\u8651 \\(\\pmod p\\) \u610f\u4e49\u4e0b\u7684\u539f\u6839 \\(g\\) , \u5c06 \\(\\{g^1,g^2,...,g^{p-1}\\} \\pmod p\\) \u4f9d\u636e\u5b83\u4eec\u7684\u5e42\u6b21 \\(\\{1, 2, 3,...p-1\\} \\pmod n\\) \u67d3\u8272\uff0c\u5219\u7531 \\(\\text{Schur}\\) \u5b9a\u7406\u77e5\u5f53 \\(p\\) \u5145\u5206\u5927\u65f6\uff0c \\(\\exists i_1, i_2, i_1 +i_2\\) \u540c\u8272, \u4e0d\u59a8\u628a\u5b83\u4eec\u5199\u6210\u5e26\u4f59\u9664\u6cd5\u7684\u5f62\u5f0f\uff0c\u4f59\u6570\u4e3a \\(r\\) , \u4e5f\u5c31\u662f\u8bf4 \\(g^{an+r}+g^{bn+r}\\equiv g^{cn+r} \\pmod p\\) \uff0c\u7ea6\u53bb \\(r\\) \uff0c\u4ee4 \\(\\{x, y, z\\} \\leftarrow \\{g^a, g^b, g^c\\}\\) \u5373\u8bc1\u3002 \\(\\text{Schur}\\) \u5b9a\u7406\u8868\u8ff0\u5982\u4e0b\uff1a\u5c06 \\(\\{1,2,3,...,n\\}\\) \u7684\u96c6\u5408\u67d3\u6210 \\(k\\) \u79cd\u989c\u8272\uff0c\u82e5 \\(n\\) \u5145\u5206\u5927\uff0c\u5219\u4e0d\u8bba\u5982\u4f55\u67d3\u8272\uff0c\u90fd \\(\\exists x, y, x+y\\) \u4e09\u8005\u540c\u8272\u3002 \u8bc1\u660e\uff1a\u7531 \\(\\text{Ramsey}\\) \u5b9a\u7406\uff0c\u53d6 \\(n = \\overbrace{R(3, .... ,3)}^{k\u4e2a}+1\\) \uff0c\u4e0d\u59a8\u4ee4\u5b8c\u5168\u56fe\u4e2d\u8fb9 \\((i\uff0c j)\\) \uff0c\u8868\u793a\u4e3a \\(|j - i|\\) \u3002\u4ece\u800c\u6bcf\u4e00\u4e2a\u6570\u5b57\u96c6\u5408\u7684\u67d3\u8272\u65b9\u6848\u90fd\u5bf9\u5e94\u4e86\u67d0\u4e00(\u4e9b)\u8fb9\u7684\u67d3\u8272\u65b9\u6848\u3002\u800c\u5728\u8be5\u56fe\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u540c\u8272 \\(K_3\\) \uff0c\u8bbe\u4e09\u8fb9\u4e3a \\((i, j), (j, k), (k, i)\\) \uff0c\u4e14 \\(i < j < k\\) \u5219 \\((j - i) + (k - j) = k - i\\) \uff0c\u4ece\u800c\u5b58\u5728\u4e09\u4e2a\u6570\u88ab\u67d3\u6210\u540c\u4e00\u4e2a\u989c\u8272\u3002 \\(\\text{Ramsey}\\) \u5b9a\u7406\u8868\u8ff0\u5982\u4e0b\uff1a\u5bf9\u4e8e \\(n\\) \u9636\u5b8c\u5168\u56fe\uff0c\u7528 \\(k\\) \u79cd\u989c\u8272\u67d3\u8272\u6bcf\u6761\u8fb9\uff0c\u82e5 \\(n\\) \u5145\u5206\u5927\uff0c\u5219\u4e0b\u5217\u547d\u9898\u81f3\u5c11\u6210\u7acb\u4e00\u4e2a\uff1a \u5b58\u5728\u8fb9\u5168\u4e3a\u989c\u8272 \\(1\\) \u7684 \\(m_1\\) \u9636\u5b8c\u5168\u5b50\u56fe \u5b58\u5728\u8fb9\u5168\u4e3a\u989c\u8272 \\(2\\) \u7684 \\(m_2\\) \u9636\u5b8c\u5168\u5b50\u56fe \\(...\\) \u5b58\u5728\u8fb9\u5168\u4e3a\u989c\u8272 \\(k\\) \u7684 \\(m_k\\) \u9636\u5b8c\u5168\u5b50\u56fe \u7b80\u8bb0\u4e3a\uff1a \\(K_n \\rightarrow K_{m_1},K_{m_2},...,K_{m_k}\\) \uff0c\u5e76\u4e14\u6700\u5c0f\u7684\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684 \\(n\\) \u8bb0\u4f5c \\(R(m_1,m_2,...,m_k)\\) \u8bc1\u660e\uff1a \u8003\u8651 \\(k = 2\\) \u7684\u60c5\u5f62\uff0c\u5373 \\(R(n, m)\\) \u5fc5\u5b9a\u5b58\u5728\uff0c\u4e0d\u59a8\u8bbe\u4e24\u79cd\u989c\u8272\u5206\u522b\u4e3a\u7ea2\u8272\u548c\u84dd\u8272\u3002 \u9996\u5148\u6211\u4eec\u8bc1\u660e \\(R(m,2)=m\\) \uff0c \u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e \\(m-1\\) \u9636\u5b8c\u5168\u56fe\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8fb9\u90fd\u6d82\u4e0a\u7ea2\u8272\uff0c\u8fd9\u6837\u65e2\u4e0d\u5b58\u5728\u7ea2 \\(K_m\\) \uff0c\u4e5f\u4e0d\u5b58\u5728\u84dd \\(K_2\\) \uff0c \u53cd\u4e4b\uff0c\u82e5\u5bf9\u4e8e \\(m\\) \u9636\u5b8c\u5168\u56fe\uff0c\u82e5\u5b58\u5728\u4e00\u6761\u84dd\u8fb9\uff0c\u5b58\u5728\u84dd \\(K_2\\) \uff0c\u5426\u5219\u82e5\u5168\u662f\u7ea2\u8fb9\uff0c\u5219\u5b58\u5728\u7ea2 \\(K_m\\) \u3002 \u8fd0\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u4e0d\u59a8\u8bbe \\(R(n, m-1)\\) \u548c \\(R(n - 1, m)\\) \u5b58\u5728\uff0c\u4e0b\u8bc1 \\(R(n, m)\\) \u5b58\u5728\u3002 \u8bbe \\(p = R(n, m - 1) + R(n - 1, m) - 1\\) \uff0c\u8003\u8651\u628a\u67d0\u4e2a\u9876\u70b9 \\(a\\) \u51fa\u53d1\u7684\u6240\u6709\u8fb9\u6309\u989c\u8272\u5206\u6210\u4e24\u7c7b\u5206\u522b\u4e3a \\(R_a, B_b\\) \u3002 \u5219\u6709 \\(|R_a|\\geq R(n-1, m)\\) \u6216 \\(|B_a|\\geq R(n, m-1)\\) \u3002 \u82e5\u7b2c\u4e00\u4e2a\u6210\u7acb\uff0c\u82e5\u8003\u8651\u6240\u6709 \\(a\\) \u51fa\u53d1\u7684\u7ea2\u8fb9\u6240\u6784\u6210\u7684\u9876\u70b9\u7684\u5b50\u56fe\uff08\u4e0d\u5305\u62ec \\(a\\) \uff09\u3002 \u5176\u4e2d\u82e5\u5b58\u5728\u84dd \\(K_m\\) \uff0c\u5219\u8bc1\u6bd5\uff0c\u82e5\u5b58\u5728\u7ea2 \\(K_{n-1}\\) \uff0c\u5219\u518d\u52a0\u4e0a\u9876\u70b9 \\(a\\) \u8fde\u5411 \\(K_{n-1}\\) \u7684\u8fb9 \uff0c\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u7ea2 \\(K_n\\) \u3002 \u82e5\u7b2c\u4e8c\u79cd\u6210\u7acb\uff0c\u8ba8\u8bba\u662f\u7c7b\u4f3c\u7684\u3002 \u4ece\u800c \\(R(n,m)\\) \u5b58\u5728\u3002 \u5e94\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u5047\u8bbe \\(R(n_1,n_2,...,n_k)\\) \u5b58\u5728\uff0c\u5219 \\(R(R(n_1, n_2),n_3,...,n_{k+1})\\) \u5b58\u5728\uff0c \u56e0\u6b64 \\(R(n_1,n_2,...,n_{k+1})\\) \u5b58\u5728\u3002 \\(\\square\\)","title":"\u6709\u9650\u57df\u4e0a\u7684 Fermat \u5927\u5b9a\u7406\u4e0e Schur \u5b9a\u7406"},{"location":"blog/posts/previous/","text":"\u5173\u4e8e\u5b50\u96c6\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u6cd5 \u00b6 1.\u5f15\u5165 \u00b6 \u7ed9\u5b9a \\(n\\) \u4ee5\u53ca\u4e24\u4e2a\u957f\u5ea6\u4e3a \\(2^n\\) \u7684\u5e8f\u5217 \\(a\\) \u548c \\(b\\) \uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(k\\) \u6c42 \\(min_{i|j=k}{ \\{a_i + b_j \\} }\\) \u3002 \u5bf9\u4e8e\u8fd9\u7c7b\u4e0d\u53ef\u9006\u7684\u8fd0\u7b97\uff0c\u5e38\u89c4\u7684 \\(FWT\\) \u65e0\u6cd5\u89e3\u51b3\uff0c \u5f53\u7136\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc \u3002 \u800c\u66b4\u529b\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u4e3a \\(2^{2n}\\) \u65e0\u6cd5\u63a5\u53d7\uff0c \u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u5206\u6cbb\u4e58\u6cd5\u3002 2.\u8bb0\u53f7 \u00b6 \u4ee5\u4e0b\u8bb0\u53f7\u501f\u7528\u4e86\u96c6\u5408\u5e42\u7ea7\u6570\u7684\u4e00\u4e9b\u5185\u5bb9\u3002 \u8003\u8651\u5c06\u957f\u5ea6\u4e3a \\(2^n\\) \u5e8f\u5217 \\(a\\) \u4e2d\u4e0b\u6807\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\u4e3a \\(1\\) \u7684\u90e8\u5206\u8bb0\u5f55\u4e3a \\(a^+\\) \uff0c\u4e3a \\(0\\) \u7684\u90e8\u5206\u8bb0\u4e3a \\(a^-\\) \uff0c\u8bb0\u5f55\u7b54\u6848\u5e8f\u5217\u4e3a \\(f\\) \u3002 \u9996\u5148\uff0c\u663e\u7136 \\(f = f^+ + f^-\\) \u3002 \u5e76\u4e14\uff0c\u6211\u4eec\u6709 \\(f^+ = min\\{min(a^+ + b^-) , min(a^- + b^+ ) , min(a^+ + b^+)\\}\\) \uff0c \\(f^- = a^- + b^-\\) \u6ce8\u610f\u5230\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u628a\u95ee\u9898\u5206\u6210\u56db\u4e2a\u957f\u5ea6\u4e3a \\(2^{n-1}\\) \u7684\u5b50\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u66b4\u529b\u5206\u6cbb\u6c42\u89e3\u590d\u6742\u5ea6\u8fd8\u662f \\(2^{2n}\\) \u5e76\u4e14\u8fd8\u591a\u4e86\u4e00\u5806\u5e38\u6570 \u3002 \u4e0d\u8fc7\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u505a\u5982\u4e0b\u5316\u7b80\uff0c \\(f^+ = min(min(a^+, a^-) + b^+, min(a^-+b^+))\\) \u800c \\(min(a^+, a^-)\\) \u662f\u53ef\u4ee5\u5728\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u5904\u7406\u7684\uff0c \u8fd9\u662f\u6211\u4eec\u7684\u5206\u6cbb\u8fc7\u7a0b\u4e3a \\(T(2^n) = 3 T(2^{n-1}) + O(2^n)\\) \u7531\u4e3b\u5b9a\u7406\u77e5\uff0c\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \\(\\Theta(3^n)\\) \u3002 \u5982\u679c\u91c7\u7528\u5408\u9002\u7684\u5b9e\u73b0\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230 \\(O(2^n)\\) \u3002 3.\u7a0b\u5e8f\u5b9e\u73b0 \u00b6 \u8be5\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u4e0a\u8d77\u6765\u5f02\u5e38\u7684\u7b80\u5355\u3002 \u4ee3\u7801\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 int a [ maxN ], b [ maxN ], c [ maxN ]; int dat [ maxN ]; void multi ( int * a , int * b , int * c , int n , int * dat ) { // a\uff0cb\u4e3a\u4e0a\u6587\u6240\u5b9a\u4e49\uff0cc\u4e3a\u7b54\u6848\u6570\u7ec4\uff0cdat\u4e3a\u4e34\u65f6\u6570\u7ec4\uff0c\u7528\u6765\u4fdd\u5b58a\u7684\u5185\u5bb9\uff0cn\u4e3a\u957f\u5ea6 // \u7531\u4e8emin\u8fd0\u7b97\u7684\u4e0d\u53ef\u9006\u6027\u8d28\uff0c\u5fc5\u987b\u5f00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u539f\u5185\u5bb9 n >>= 1 ; if ( ! n ) { c [ 0 ] = min ( a [ 0 ] + b [ 0 ], c [ 0 ]); return ; } multi ( a , b , c , n , dat ); multi ( a + n , b , c + n , n , dat ); for ( int i = 0 ; i < n ; ++ i ) { dat [ i ] = a [ i ]; a [ i ] = min ( a [ i ], a [ i + n ]); } multi ( a , b + n , c + n , n , dat + n ); for ( int i = 0 ; i < n ; ++ i ) a [ i ] = dat [ i ]; } 4.\u4e60\u9898 \u00b6 FWT\u80fd\u505a\u7684\u5b83\u90fd\u80fd\u505a\u3002 \u8c8c\u4f3c\u8fd8\u6ca1\u4ec0\u4e48\u4e60\u9898\u3002 \u4e5f\u8bb8\u53ef\u4ee5\u7528 AT4168 \u505a\u677f\u5b50\uff1f","title":"\u5173\u4e8e\u5b50\u96c6\u95ee\u9898\u7684\u89e3\u6cd5"},{"location":"blog/posts/previous/#_1","text":"","title":"\u5173\u4e8e\u5b50\u96c6\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u6cd5"},{"location":"blog/posts/previous/#1","text":"\u7ed9\u5b9a \\(n\\) \u4ee5\u53ca\u4e24\u4e2a\u957f\u5ea6\u4e3a \\(2^n\\) \u7684\u5e8f\u5217 \\(a\\) \u548c \\(b\\) \uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(k\\) \u6c42 \\(min_{i|j=k}{ \\{a_i + b_j \\} }\\) \u3002 \u5bf9\u4e8e\u8fd9\u7c7b\u4e0d\u53ef\u9006\u7684\u8fd0\u7b97\uff0c\u5e38\u89c4\u7684 \\(FWT\\) \u65e0\u6cd5\u89e3\u51b3\uff0c \u5f53\u7136\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc \u3002 \u800c\u66b4\u529b\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u4e3a \\(2^{2n}\\) \u65e0\u6cd5\u63a5\u53d7\uff0c \u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u5206\u6cbb\u4e58\u6cd5\u3002","title":"1.\u5f15\u5165"},{"location":"blog/posts/previous/#2","text":"\u4ee5\u4e0b\u8bb0\u53f7\u501f\u7528\u4e86\u96c6\u5408\u5e42\u7ea7\u6570\u7684\u4e00\u4e9b\u5185\u5bb9\u3002 \u8003\u8651\u5c06\u957f\u5ea6\u4e3a \\(2^n\\) \u5e8f\u5217 \\(a\\) \u4e2d\u4e0b\u6807\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\u4e3a \\(1\\) \u7684\u90e8\u5206\u8bb0\u5f55\u4e3a \\(a^+\\) \uff0c\u4e3a \\(0\\) \u7684\u90e8\u5206\u8bb0\u4e3a \\(a^-\\) \uff0c\u8bb0\u5f55\u7b54\u6848\u5e8f\u5217\u4e3a \\(f\\) \u3002 \u9996\u5148\uff0c\u663e\u7136 \\(f = f^+ + f^-\\) \u3002 \u5e76\u4e14\uff0c\u6211\u4eec\u6709 \\(f^+ = min\\{min(a^+ + b^-) , min(a^- + b^+ ) , min(a^+ + b^+)\\}\\) \uff0c \\(f^- = a^- + b^-\\) \u6ce8\u610f\u5230\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u628a\u95ee\u9898\u5206\u6210\u56db\u4e2a\u957f\u5ea6\u4e3a \\(2^{n-1}\\) \u7684\u5b50\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u66b4\u529b\u5206\u6cbb\u6c42\u89e3\u590d\u6742\u5ea6\u8fd8\u662f \\(2^{2n}\\) \u5e76\u4e14\u8fd8\u591a\u4e86\u4e00\u5806\u5e38\u6570 \u3002 \u4e0d\u8fc7\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u505a\u5982\u4e0b\u5316\u7b80\uff0c \\(f^+ = min(min(a^+, a^-) + b^+, min(a^-+b^+))\\) \u800c \\(min(a^+, a^-)\\) \u662f\u53ef\u4ee5\u5728\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u5904\u7406\u7684\uff0c \u8fd9\u662f\u6211\u4eec\u7684\u5206\u6cbb\u8fc7\u7a0b\u4e3a \\(T(2^n) = 3 T(2^{n-1}) + O(2^n)\\) \u7531\u4e3b\u5b9a\u7406\u77e5\uff0c\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \\(\\Theta(3^n)\\) \u3002 \u5982\u679c\u91c7\u7528\u5408\u9002\u7684\u5b9e\u73b0\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230 \\(O(2^n)\\) \u3002","title":"2.\u8bb0\u53f7"},{"location":"blog/posts/previous/#3","text":"\u8be5\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u4e0a\u8d77\u6765\u5f02\u5e38\u7684\u7b80\u5355\u3002 \u4ee3\u7801\u5b9e\u73b0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 int a [ maxN ], b [ maxN ], c [ maxN ]; int dat [ maxN ]; void multi ( int * a , int * b , int * c , int n , int * dat ) { // a\uff0cb\u4e3a\u4e0a\u6587\u6240\u5b9a\u4e49\uff0cc\u4e3a\u7b54\u6848\u6570\u7ec4\uff0cdat\u4e3a\u4e34\u65f6\u6570\u7ec4\uff0c\u7528\u6765\u4fdd\u5b58a\u7684\u5185\u5bb9\uff0cn\u4e3a\u957f\u5ea6 // \u7531\u4e8emin\u8fd0\u7b97\u7684\u4e0d\u53ef\u9006\u6027\u8d28\uff0c\u5fc5\u987b\u5f00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u539f\u5185\u5bb9 n >>= 1 ; if ( ! n ) { c [ 0 ] = min ( a [ 0 ] + b [ 0 ], c [ 0 ]); return ; } multi ( a , b , c , n , dat ); multi ( a + n , b , c + n , n , dat ); for ( int i = 0 ; i < n ; ++ i ) { dat [ i ] = a [ i ]; a [ i ] = min ( a [ i ], a [ i + n ]); } multi ( a , b + n , c + n , n , dat + n ); for ( int i = 0 ; i < n ; ++ i ) a [ i ] = dat [ i ]; }","title":"3.\u7a0b\u5e8f\u5b9e\u73b0"},{"location":"blog/posts/previous/#4","text":"FWT\u80fd\u505a\u7684\u5b83\u90fd\u80fd\u505a\u3002 \u8c8c\u4f3c\u8fd8\u6ca1\u4ec0\u4e48\u4e60\u9898\u3002 \u4e5f\u8bb8\u53ef\u4ee5\u7528 AT4168 \u505a\u677f\u5b50\uff1f","title":"4.\u4e60\u9898"}]}